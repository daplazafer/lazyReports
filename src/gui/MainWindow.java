package gui;

import app.App;
import app.ReportGenerator;
import lib.Tuple3;
import data.SkillsLoader;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import lib.FileUtil;

/**
 *
 * @author dpf
 */
public class MainWindow extends javax.swing.JFrame {

    private static final String SKILLSPANEL_NAME = "Skills";
    private static final String ICON = "icon.png";
    private static final String ERROR_NAME1 = "'Name 1' field is empty";
    private static final String REPORT_GENERATED = "Report generated succesfully";
    private static final String DIALOG_ERROR_TITLE = "Error";
    private static final String DIALOG_DONE_TITLE = "Done";

    //private final SkillsLoader sl;
    private List<SkillPanel> spl;

    /**
     * Creates new form MainWindow
     *
     * @param sl
     * @param title
     */
    public MainWindow(SkillsLoader sl, String title) {
        initComponents();

        // Setting up the tittle
        setTitle(title);

        // Setting up window icon
        Image image = Toolkit.getDefaultToolkit().getImage(getClass().getResource(ICON));
        ImageIcon icon = new ImageIcon(image);
        setIconImage(icon.getImage());

        // Filling attributes panel
        fillSkillsPanel(sl);

        // Centering the window in the screen
        this.setLocationRelativeTo(null);

    }

    private void fillSkillsPanel(SkillsLoader sl) {
        SkillsPanel.setBorder(BorderFactory.createTitledBorder(SKILLSPANEL_NAME));
        SkillsPanel.setLayout(new BoxLayout(SkillsPanel, BoxLayout.Y_AXIS));
        spl = new ArrayList<>();
        SkillPanel sp;
        for (String s : sl.getSkills()) {
            sp = new SkillPanel(s, sl.getLevels(s));
            spl.add(sp);
            SkillsPanel.add(sp);
        }
        // Fit the window to its components
        this.setSize(this.getPreferredSize());
    }

    private void clear() {
        tfName1.setText("");
        tfName2.setText("");
        taNotes.setText("");
    }

    private void showErrorDialog(String errorMessage) {
        JOptionPane.showMessageDialog(new JFrame(), errorMessage, DIALOG_ERROR_TITLE, JOptionPane.ERROR_MESSAGE);
    }

    private void showGeneratedDialog() {
        JOptionPane.showMessageDialog(new JFrame(), REPORT_GENERATED, DIALOG_DONE_TITLE, JOptionPane.WARNING_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelName1 = new javax.swing.JLabel();
        tfName1 = new javax.swing.JTextField();
        SkillsPanel = new javax.swing.JPanel();
        labelNotes = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taNotes = new javax.swing.JTextArea();
        btnGenerate = new javax.swing.JButton();
        labelName2 = new javax.swing.JLabel();
        tfName2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelName1.setText("Name 1");

        javax.swing.GroupLayout SkillsPanelLayout = new javax.swing.GroupLayout(SkillsPanel);
        SkillsPanel.setLayout(SkillsPanelLayout);
        SkillsPanelLayout.setHorizontalGroup(
            SkillsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        SkillsPanelLayout.setVerticalGroup(
            SkillsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 12, Short.MAX_VALUE)
        );

        labelNotes.setText("Additional Notes");

        taNotes.setColumns(20);
        taNotes.setLineWrap(true);
        taNotes.setRows(5);
        jScrollPane2.setViewportView(taNotes);

        btnGenerate.setText("Generate");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        labelName2.setText("Name 2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                    .addComponent(SkillsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelNotes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelName1)
                            .addComponent(labelName2))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfName1)
                            .addComponent(tfName2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnGenerate)))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelName1)
                    .addComponent(tfName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelName2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SkillsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelNotes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btnGenerate)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        // If at least 'Name 1' had not been introduced show an error
        if (tfName1.getText().equals("")) {
            showErrorDialog(ERROR_NAME1);
            return;
        }
        String name1 = tfName1.getText();
        String name2 = tfName2.getText();
        
        // Generating the report with the selected options
        App.log("Generating report... ");
        ReportGenerator rg = new ReportGenerator(name1, name2);
        List<Tuple3<String, String, Boolean>> selectedSkills = new ArrayList<>();
        for (SkillPanel sp : spl) {
            if (sp.isSelected()) {
                selectedSkills.add(new Tuple3(sp.getSkillName(), sp.getLevelSelected(), sp.isCrlf()));
            }
        }
        List<String> report = rg.generateReport(selectedSkills, taNotes.getText());
        clear();
        App.logDone();

        // Writing to a file
        App.log("Saving report... ");
        String fileName = "";
        fileName += name1;
        if (!name2.equals("")) {
            fileName += " " + name2;
        }
        fileName += "." + App.cfg.get(App.OUTPUT_EXT);
        File output = new File(App.cfg.get(App.OUTPUT_PATH) + File.separator + fileName);
        FileUtil.writeFile(output, report);
        App.logDone();
        
        // Show confirmation dialog
        showGeneratedDialog();
    }//GEN-LAST:event_btnGenerateActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SkillsPanel;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelName1;
    private javax.swing.JLabel labelName2;
    private javax.swing.JLabel labelNotes;
    private javax.swing.JTextArea taNotes;
    private javax.swing.JTextField tfName1;
    private javax.swing.JTextField tfName2;
    // End of variables declaration//GEN-END:variables
}
